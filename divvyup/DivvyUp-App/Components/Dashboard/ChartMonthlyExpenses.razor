@using System.Globalization
@using DivvyUp_Shared.Dtos.Entity
@using DivvyUp_Shared.Interfaces

<div class="main-container">
    <div class="chart-title">
        @TitleChart
    </div>
    <RadzenStack class="chart-container" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
        <RadzenChart Style="min-height: 100%; width: 100%;">
            <RadzenLegend Visible="false" />
            <RadzenChartTooltipOptions Shared="true"/>
            <RadzenLineSeries Smooth="false" Data="@MonthlyTotalExpenses" Title="Koszt wszystkich osób" CategoryProperty="@nameof(ChartDto.Name)" ValueProperty="@nameof(ChartDto.Value)">
                <RadzenMarkers Visible="false" MarkerType="MarkerType.Circle"/>
                <RadzenSeriesDataLabels Visible="false"/>
            </RadzenLineSeries>
            <RadzenLineSeries Smooth="false" Data="@MonthlyUserExpenses" Title="Koszt właściciela konta" CategoryProperty="@nameof(ChartDto.Name)" ValueProperty="@nameof(ChartDto.Value)">
                <RadzenMarkers Visible="false" MarkerType="MarkerType.Circle"/>
                <RadzenSeriesDataLabels Visible="false"/>
            </RadzenLineSeries>
            <RadzenCategoryAxis Padding="20"/>
            <RadzenValueAxis Formatter="@Format">
                <RadzenGridLines Visible="true"/>
                @*<RadzenAxisTitle Text="@TitleChart"/>*@
            </RadzenValueAxis>
        </RadzenChart>
    </RadzenStack>
</div>

@code {
    [Inject]
    private IChartService ChartService { get; set; }

    [Parameter]
    public EventCallback OnLoadComplete { get; set; }

    private List<ChartDto> MonthlyTotalExpenses { get; set; } = new();
    private List<ChartDto> MonthlyUserExpenses { get; set; } = new();
    private string TitleChart { get; set; }

    protected override async Task OnInitializedAsync()
    {
        int year = DateTime.Now.Year;
        TitleChart = $"Koszta na rok {year}";
        MonthlyTotalExpenses = await ChartService.GetMonthlyTotalExpenses(year);
        MonthlyUserExpenses = await ChartService.GetMonthlyUserExpenses(year);
        await OnLoadComplete.InvokeAsync();
    }

    string Format(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("pl-PL"));
    }
}

<style>
    .main-container{
        position: relative;
        width: 100%;
        height: 100%;
    }
    .chart-title{
        position: absolute;
        top: -15px;
        left: 0;
        width: 100%;
        text-align: center;
        font-size: 15px;
        z-index: 10;
        pointer-events: none;
    }
    .chart-container{
        width: 100%;
        height: 100%;
        margin-top: 7px;
    }
</style>