@using System.Globalization
@using DivvyUp_Shared.Dtos.Entity
@using DivvyUp_Shared.Interfaces

<RadzenStack Style="width: 100%; height: 100%;" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start" Orientation="Orientation.Horizontal">
    <RadzenChart Style="max-height: 110%; width: 50%;">
        <RadzenPieSeries Data="@ChartUnpaidAmount" Title="Kwota nieopłacona" CategoryProperty="@nameof(ChartDto.Name)" ValueProperty="@nameof(ChartDto.Value)">
            <RadzenSeriesDataLabels Visible="false" />
            <RadzenLegend Visible="false" />
            <RadzenValueAxis Formatter="@Format">
                <RadzenGridLines Visible="true" />
            </RadzenValueAxis>
        </RadzenPieSeries>
    </RadzenChart>
    <RadzenChart Style="max-height: 110%; width: 50%;">
        <RadzenPieSeries Data="@ChartTotalAmount" Title="Kwota łączna" CategoryProperty="@nameof(ChartDto.Name)" ValueProperty="@nameof(ChartDto.Value)">
            <RadzenSeriesDataLabels Visible="false" />
            <RadzenLegend Visible="true" />
            <RadzenValueAxis Formatter="@Format">
                <RadzenGridLines Visible="true" />
            </RadzenValueAxis>
        </RadzenPieSeries>
    </RadzenChart>
</RadzenStack>





@code {
    [Inject]
    private IChartService ChartService { get; set; }

    [Parameter]
    public EventCallback OnLoadComplete { get; set; }

    private List<ChartDto> ChartUnpaidAmount { get; set; }
    private List<ChartDto> ChartTotalAmount { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ChartUnpaidAmount = await ChartService.GetAmounts(false);
        ChartTotalAmount = await ChartService.GetAmounts(true);
        await OnLoadComplete.InvokeAsync();
    }

    string Format(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("pl-PL"));
    }
}
