@using DivvyUp_Shared.AppConstants
@using DivvyUp_Shared.Dto

<RadzenDataGrid @ref="@Grid"
                Data="@PersonProducts"
                TItem="PersonProductDto"
                AllowSorting="true"
                AllowAlternatingRows="true"
                FilterMode="FilterMode.Simple"
                AllowFiltering="true"
                LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true"
                PagerAlwaysVisible="true"
                PageSize="10"
                PageSizeOptions="@PageSizeOptions"
                PagerHorizontalAlign="HorizontalAlign.Center"
                ShowPagingSummary="true"
                EditMode="DataGridEditMode.Single"
                GridLines="DataGridGridLines.Both">
    <HeaderTemplate>
        <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="refresh" Text="Odśwież" Click="@LoadGrid" />
    </HeaderTemplate>
    <Columns>
        <RadzenDataGridColumn Title="Zarządzanie" Width="15%" TextAlign="TextAlign.Center" Frozen="true">
            <Template Context="personProduct">
                <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Secondary" Click="@((args) => EditRow(personProduct))" />
                <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Click="@((args) => RemoveRow(personProduct))" />
            </Template>
            <EditTemplate Context="personProduct">
                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Click="@((args) => SaveRow(personProduct))" />
                <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Danger" Click="@((args) => CancelEdit(personProduct))" />
            </EditTemplate>
            <FilterTemplate>
                <div class="rz-cell-data">
                    <RadzenButton Icon="add_circle" ButtonStyle="ButtonStyle.Success" Click="@InsertRow" />
                    <RadzenButton Icon="filter_alt_off" ButtonStyle="ButtonStyle.Dark" Click="@(args => { Grid.Reset(); })" />
                </div>
            </FilterTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(PersonProductDto.settled)" Title="Rozliczono" Width="15%" TextAlign="TextAlign.Center" Frozen="true">
            <Template Context="personProduct">
                <RadzenCheckBox class="button" @bind-Value="@personProduct.settled" Change="@(async (bool check) => await ChangeSettled(personProduct.id, personProduct.settled))" />
            </Template>
            <EditTemplate Context="personProduct">
                <RadzenCheckBox style="opacity: 0.6; " class="button" Value="@personProduct.settled" ReadOnly="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(PersonProductDto.compensation)" Title="Wyrównanie" Width="15%" TextAlign="TextAlign.Center" Frozen="true">
            <Template Context="personProduct">
                <RadzenCheckBox class="button" @bind-Value="@personProduct.compensation" Change="@(async (bool check) => await ChangeCompensation(personProduct.id))"/>
            </Template>
            <EditTemplate Context="personProduct">
                <RadzenCheckBox style="opacity: 0.6; " class="button" Value="@personProduct.compensation" ReadOnly="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(PersonProductDto.quantity)" Title="Ilość" Width="15%" TextAlign="TextAlign.Center" Frozen="true">
            <Template Context="personProduct">
                @($"{personProduct.quantity}/{Product.maxQuantity}")
            </Template>
            <EditTemplate Context="personProduct">
                @if (personProduct.quantity == 0)
                {
                    personProduct.quantity = @Product.availableQuantity;
                }
                <RadzenNumeric @bind-Value="@personProduct.quantity" Min="1" Max="@Product.availableQuantity" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(PersonProductDto.partOfPrice)" Title="Cena" Width="15%" TextAlign="TextAlign.Center" Frozen="true">
            <Template Context="personProduct">
                <div style="color: @(personProduct.settled ? "green" : "red")">
                    <b>@personProduct.partOfPrice.ToString(Format.PriceFormat)</b>
                </div>
            </Template>
            <EditTemplate Context="personProduct">
                -
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(PersonProductDto.personId)" Title="Osoba" Width="25%" TextAlign="TextAlign.Center" Frozen="true">
            <Template Context="personProduct">
                <RadzenDropDownDataGrid TValue="int"
                                        Value="@personProduct.personId"
                                        ValueChanged="async (int personId) => await OnPersonChange(personProduct, personId)"
                                        Data="@Persons"
                                        TextProperty="@nameof(PersonDto.fullName)"
                                        ValueProperty="@nameof(PersonDto.id)"/>
            </Template>
            <EditTemplate Context="personProduct">
                @{
                    if (personProduct.id != 0)
                    {
                        if (!PeopleAvailable.Any(p => p.id == personProduct.person.id))
                        {
                            PeopleAvailable.Add(personProduct.person);
                        }
                    }
                    else if (PeopleAvailable.Any())
                    {
                        personProduct.personId = PeopleAvailable.First().id;
                    }

                    <RadzenDropDownDataGrid
                        TValue="int"
                        @bind-Value="@personProduct.personId"
                        Data="@PeopleAvailable"
                        TextProperty="@nameof(PersonDto.fullName)"
                        ValueProperty="@nameof(PersonDto.id)" />
                }
            </EditTemplate>
        </RadzenDataGridColumn>

    </Columns>
</RadzenDataGrid>
                
<style>
    .button {
        width: 36px;
        height: 36px;
    }

    .rz-cell-filter-content {
        display: flex;
        justify-content: center
    }

    .rz-data-grid {
        height: 100%;
    }
</style>
