@using DivvyUp_Shared.AppConstants
@using DivvyUp_Shared.Dtos.Entity
@using DivvyUp_App.BaseComponents.DLoadingPanel

<div class="h-100 w-100">
    <DLoadingPanel IsLoading="@IsLoading" Size="ProgressBarCircularSize.Medium"/>
    <RadzenDataGrid @ref="@Grid"
                    Data="@PersonProducts"
                    TItem="PersonProductDto"
                    AllowSorting="true"
                    AllowAlternatingRows="true"
                    FilterMode="FilterMode.Simple"
                    AllowFiltering="true"
                    LogicalFilterOperator="LogicalFilterOperator.Or"
                    AllowPaging="true"
                    PagerAlwaysVisible="true"
                    PageSize="10"
                    PageSizeOptions="@PageSizeOptions"
                    PagerHorizontalAlign="HorizontalAlign.Center"
                    ShowPagingSummary="true"
                    EditMode="DataGridEditMode.Single"
                    GridLines="DataGridGridLines.Both">
        <HeaderTemplate>
            <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="refresh" Text="Odśwież" Click="@LoadGrid" />
        </HeaderTemplate>
        <EmptyTemplate>
            <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">Brak wpisów</p>
        </EmptyTemplate>
        <Columns>
            <RadzenDataGridColumn Title="Zarządzanie" Width="15%" TextAlign="TextAlign.Center" Frozen="true">
                <Template Context="personProduct">
                    @if (personProduct.Product.Divisible)
                    {
                        <RadzenButton Icon="play_arrow" ButtonStyle="ButtonStyle.Primary" Click="@((args) => OpenPersonProductList(personProduct.ProductId, personProduct.Product.Name))" style="margin-right: 3px;" />
                    }
                    <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Click="@((args) => RemoveRow(personProduct))"/>
                </Template>
                <EditTemplate Context="personProduct">
                    <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Danger" Click="@(async(args) => await CancelEdit(personProduct))" />
                </EditTemplate>
                <FilterTemplate>
                    <div class="rz-cell-data">
                        <RadzenButton Icon="filter_alt_off" ButtonStyle="ButtonStyle.Dark" Click="@(args => { Grid.Reset(); })" />
                    </div>
                </FilterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="@nameof(PersonProductDto.Settled)" Title="Rozliczono" Width="15%" TextAlign="TextAlign.Center" Frozen="true">
                <Template Context="personProduct">
                    <RadzenCheckBox class="grid-button settled-active" @bind-Value="@personProduct.Settled" Change="@(async (bool Check) => await ChangeSettled(personProduct.Id, personProduct.Settled))" />
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="@nameof(PersonProductDto.Product)" Title="Nazwa produktu" Width="15%" TextAlign="TextAlign.Center" Frozen="true">
                <Template Context="personProduct">
                    @personProduct.Product.Name
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="@nameof(PersonProductDto.Quantity)" Title="Liczba części" Width="15%" TextAlign="TextAlign.Center" Frozen="true">
                <Template Context="personProduct">
                    <div style="@(personProduct.Settled ? Format.IsSettledStyle : Format.IsNotSettledStyle)">
                        @if (personProduct.Product.Divisible)
                        {
                            @($"{personProduct.Quantity}/{personProduct.Product.MaxQuantity}")
                        }
                        else
                        {
                            <div>-</div>
                        }
                    </div>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="@nameof(PersonProductDto.PartOfPrice)" Title="Cena" Width="15%" TextAlign="TextAlign.Center" Frozen="true">
                <Template Context="personProduct">
                    <div style="@(personProduct.Settled ? Format.IsSettledStyle : Format.IsNotSettledStyle); display: inline-block;">
                        <b>@personProduct.PartOfPrice.ToString(Format.PriceFormat)</b>
                        @if (personProduct.Compensation && personProduct.Product.CompensationPrice != 0)
                        {
                            <div style="display: inline;"><b> + @personProduct.Product.CompensationPrice.ToString(Format.PriceFormat)</b></div>
                        }
                    </div>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</div>
