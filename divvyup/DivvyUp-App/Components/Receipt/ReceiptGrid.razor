@using DivvyUp_Shared.AppConstants
@using DivvyUp_Shared.Dtos.Entity
@using DivvyUp_App.BaseComponents.DLoadingPanel

<DLoadingPanel IsLoading="@IsLoading"/>
<RadzenDataGrid @ref="@Grid" 
                Data="@Receipts"
                TItem="ReceiptDto"
                AllowSorting="true"
                AllowAlternatingRows="true" 
                FilterMode="FilterMode.Simple"
                AllowFiltering="true"
                LogicalFilterOperator="LogicalFilterOperator.Or" 
                AllowPaging="true"
                PagerAlwaysVisible="true" 
                PageSize="10" 
                PageSizeOptions="@PageSizeOptions"
                PagerHorizontalAlign="HorizontalAlign.Center"
                ShowPagingSummary="true"
                EditMode="DataGridEditMode.Single"
                GridLines="DataGridGridLines.Both">
    <HeaderTemplate>
        <div style="display: flex; align-items: center; flex-wrap: wrap; gap: 10px;">
            <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="refresh" Text="Odśwież" Click="@LoadGrid"/>
            @if (!ShowAllReceipts)
            {
                <RadzenDatePicker TValue="DateOnly" Value="@DateFrom" ValueChanged="@(async (DateOnly date) => { DateFrom = date; await SaveSettingsToLocalStorage(); })" Name="Data od" DateFormat="@Format.DateFormat"/>
                <RadzenDatePicker TValue="DateOnly" Value="@DateTo" ValueChanged="@(async (DateOnly date) => { DateTo = date; await SaveSettingsToLocalStorage(); })" Name="Data do" DateFormat="@Format.DateFormat"/>
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="calendar_month" Text="Obecny miesiąc" Click="@(async () => await SetCurrentMonth())"/>
            }
            <RadzenButton Style="position: absolute; right: 10px;" ButtonStyle="@(ShowAllReceipts ? ButtonStyle.Success : ButtonStyle.Danger)" Icon="receipt" Text="Pokaż wszystkie rachunki" Click="@(async () => { ShowAllReceipts = !ShowAllReceipts; await SaveSettingsToLocalStorage(); await LoadGrid(); })" />
        </div>
    </HeaderTemplate>
    <EmptyTemplate>
        <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">Brak wpisów</p>
    </EmptyTemplate>
    <Columns>
        <RadzenDataGridColumn Title="Zarządzanie" Width="12%" TextAlign="TextAlign.Center" Frozen="true" Sortable="false">
            <HeaderTemplate>
                <RadzenButton Icon="add_circle" ButtonStyle="ButtonStyle.Success" Click="@InsertRow" />
            </HeaderTemplate>
            <Template Context="receipt">
                <RadzenButton Icon="play_arrow" ButtonStyle="ButtonStyle.Primary" Click="@((args) => OpenProductsList(receipt.Id))"/>
                <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Secondary" Click="@((args) => EditRow(receipt))"/>
                <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Click="@((args) => RemoveRow(receipt))"/>
            </Template>
            <EditTemplate Context="receipt">
                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Click="@((args) => SaveRow(receipt))"/>
                <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Danger" Click="@(async (args) => await CancelEdit(receipt))"/>
            </EditTemplate>
            <FilterTemplate>
                <div class="rz-cell-data">
                    <RadzenButton Icon="filter_alt_off" ButtonStyle="ButtonStyle.Dark" Click="@(args => { Grid.Reset(); })"/>
                </div>
            </FilterTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(ReceiptDto.Settled)" Title="Rozliczono" Width="10%" TextAlign="TextAlign.Center" Frozen="true">
            <Template Context="receipt">
                <RadzenCheckBox class="grid-button settled-active" @bind-Value="@receipt.Settled" Change="@(async (bool Check) => await ChangeSettled(receipt.Id, receipt.Settled))" />
            </Template>
            <EditTemplate Context="receipt">
                <RadzenCheckBox style="opacity: 0.6; " class="grid-button settled-active" Value="@receipt.Settled" ReadOnly="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(ReceiptDto.Name)" Title="Nazwa" Width="23%" TextAlign="TextAlign.Start" Frozen="true">
            <Template Context="receipt">
                <div style="@(receipt.Settled ? Format.IsSettledStyle : Format.IsNotSettledStyle)">
                    @receipt.Name
                </div>
            </Template>
            <EditTemplate Context="receipt">
                <RadzenTextBox @bind-value="@receipt.Name" Style="width: 100%;"/>
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(ReceiptDto.Date)" Title="Data" Width="20%" TextAlign="TextAlign.Start" Frozen="true" FilterMode="FilterMode.SimpleWithMenu" >
            <Template Context="receipt">
                <div style="@(receipt.Settled ? Format.IsSettledStyle : Format.IsNotSettledStyle)">
                    @receipt.Date.ToString(Format.DateFormat)
                </div>
            </Template>
            <EditTemplate Context="receipt">
                <RadzenDatePicker @bind-Value="@receipt.Date" ShowCalendarWeek DateFormat="@Format.DateFormat" Style="width: 100%;" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(ReceiptDto.DiscountPercentage)" Title="Rabat" Width="8%" TextAlign="TextAlign.Start" Frozen="true">
            <Template Context="receipt">
                <div style="@(receipt.Settled ? Format.IsSettledStyle : Format.IsNotSettledStyle)">
                    @receipt.DiscountPercentage.ToString(Format.ProcFormat)
                </div>
            </Template>
            <EditTemplate Context="receipt">
                <RadzenNumeric @bind-Value="@receipt.DiscountPercentage" Min="0" Max="100" Format="@Format.ProcFormat" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(ReceiptDto.TotalPrice)" Title="Kwota" Width="20%" TextAlign="TextAlign.Start" Frozen="true">
            <Template Context="receipt">               
                <div style="@(receipt.Settled ? Format.IsSettledStyle : Format.IsNotSettledStyle)">
                    <b>@receipt.TotalPrice.ToString(Format.PriceFormat)</b>
                </div>
            </Template>
            <EditTemplate Context="receipt">
                <div style="@(receipt.Settled ? Format.IsSettledStyle : Format.IsNotSettledStyle)">
                    <b>@receipt.TotalPrice.ToString(Format.PriceFormat)</b>
                </div>
            </EditTemplate>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>