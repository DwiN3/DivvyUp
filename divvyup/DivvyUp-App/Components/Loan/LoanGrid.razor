@using DivvyUp_Shared.AppConstants
@using DivvyUp_Shared.Dto
@using DivvyUp_Shared.Enum

<RadzenDataGrid @ref="@Grid"
                Data="@Loans"
                TItem="LoanDto"
                AllowSorting="true"
                AllowAlternatingRows="true"
                FilterMode="FilterMode.Simple"
                AllowFiltering="true"
                LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true"
                PagerAlwaysVisible="true"
                PageSize="5"
                PageSizeOptions="@PageSizeOptions"
                PagerHorizontalAlign="HorizontalAlign.Center"
                ShowPagingSummary="true"
                EditMode="DataGridEditMode.Single"
                GridLines="DataGridGridLines.Both">
    <HeaderTemplate>
        <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="refresh" Text="Odśwież" Click="@LoadGrid" Disabled="@IsGridEdit" />
        @if (!ShowAllLoans && GridMode == LoanGridMode.All)
        {
            <RadzenDatePicker TValue="DateTime?" Value="@DateFrom" Change="@(args => DateFrom = args)" Name="Data od" DateFormat="dd-MM-yyyy" />
            <RadzenDatePicker TValue="DateTime?" Value="@DateTo" Change="@(args => DateTo = args)" Name="Data do" DateFormat="dd-MM-yyyy" />
            <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="calendar_month" Text="Obecny miesiąc" Click="@(async() => await SetCurrentMonth())" Disabled="@IsGridEdit" />
        }
        <RadzenButton Style="position: absolute; right: 10px;" ButtonStyle="@(ShowAllLoans ? ButtonStyle.Success : ButtonStyle.Danger)" Icon="attach_money" Text="Pokaż wszystkie pożyczki" Click="@(async() => { ShowAllLoans = !ShowAllLoans; await LoadGrid();})" Visible="@(GridMode == LoanGridMode.All)" Disabled="@IsGridEdit" />
    </HeaderTemplate>
    <Columns>
        <RadzenDataGridColumn Title="Zarządzanie" Width="12%" TextAlign="TextAlign.Center" Frozen="true">
            <Template Context="loan">
                <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Secondary" Click="@((args) => EditRow(loan))" />
                <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Click="@((args) => RemoveRow(loan))" />
            </Template>
            <EditTemplate Context="loan">
                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Click="@((args) => SaveRow(loan))" />
                <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Danger" Click="@((args) => CancelEdit(loan))" />
            </EditTemplate>
            <FilterTemplate>
                <div class="rz-cell-data">
                    <RadzenButton Icon="add_circle" ButtonStyle="ButtonStyle.Success" Click="@InsertRow" Disabled="@IsGridEdit" />
                    <RadzenButton Icon="filter_alt_off" ButtonStyle="ButtonStyle.Dark" Click="@(args => { Grid.Reset(); })"/>
                </div>
            </FilterTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(LoanDto.settled)" Title="Rozliczono" Width="10%" TextAlign="TextAlign.Center" Frozen="true">
            <Template Context="loan">
                <RadzenCheckBox class="button" @bind-Value="@loan.settled" Change="@(async (bool Check) => await ChangeSettled(loan.id, loan.settled))" />
            </Template>
            <EditTemplate Context="receipt">
                <RadzenCheckBox style="opacity: 0.6; " class="button" Value="@receipt.settled" ReadOnly="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(LoanDto.date)" Title="Data" Width="20%" TextAlign="TextAlign.Start" Frozen="true" FilterMode="FilterMode.SimpleWithMenu" >
            <Template Context="loan">
                @loan.date.ToString("dd.MM.yyyy")
            </Template>
            <EditTemplate Context="loan">
                <RadzenDatePicker @bind-Value="@loan.date" ShowCalendarWeek DateFormat="dd.MM.yyyy" Style="width: 100%;" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(LoanDto.lent)" Title="Pożyczka" Width="10%" TextAlign="TextAlign.Center" Frozen="true">
            <Template Context="loan">
                <RadzenButton ButtonStyle="@(loan.lent ? ButtonStyle.Success : ButtonStyle.Danger)" Icon="@(loan.lent ? "north_east" : "south_west")" Click="@(async() => { await ChangeLent(loan.id, !loan.lent); await LoadGrid(); })" />
            </Template>
            <EditTemplate Context="loan">
                <RadzenButton ButtonStyle="@(loan.lent ? ButtonStyle.Success : ButtonStyle.Danger)" Icon="@(loan.lent ? "north_east" : "south_west")" Click="@(() => { loan.lent = !loan.lent; })" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(LoanDto.amount)" Title="Kwota" Width="12%" TextAlign="TextAlign.Start" Frozen="true">
            <Template Context="loan">
                <div style="color: @(loan.lent ? "green" : "red"); text-decoration: @(loan.settled ? "line-through" : "none");">
                    <b>@loan.amount.ToString((Format.PriceFormat))</b>
                </div>
            </Template>
            <EditTemplate Context="loan">
                <RadzenNumeric @bind-Value="@loan.amount" Style="width: 100%;" />
            </EditTemplate>
        </RadzenDataGridColumn>
        @if (GridMode == LoanGridMode.All)
        {
            <RadzenDataGridColumn Property="@nameof(LoanDto.personId)" Title="Osoba" Width="25%" TextAlign="TextAlign.Center" Frozen="true">
                <Template Context="loan">
                    <RadzenDropDownDataGrid TValue="int"
                                            Value="@loan.personId"
                                            ValueChanged="async (int personId) => await OnPersonChange(loan, personId)"
                                            Data="@Persons"
                                            TextProperty="@nameof(PersonDto.fullName)"
                                            ValueProperty="@nameof(PersonDto.id)" />
                </Template>
                <EditTemplate Context="loan">
                    @{
                        if (Persons != null && Persons.Count > 0 && loan.personId == 0)
                        {
                            loan.personId = Persons.First().id;
                        }
                    }
                    <RadzenDropDownDataGrid
                        TValue="int"
                        @bind-Value="loan.personId"
                        Data="@Persons"
                        TextProperty="@nameof(PersonDto.fullName)"
                        ValueProperty="@nameof(PersonDto.id)"/>
                </EditTemplate>
            </RadzenDataGridColumn>            
        }
    </Columns>
</RadzenDataGrid>

<style>
    .button {
        width: 36px;
        height: 36px;
    }

    .rz-cell-filter-content {
        display: flex;
        justify-content: center
    }

    .rz-data-grid {
        height: 100%;
    }

    .rz-inputtext {
        height: 36px !important;
    }
</style>